# From: https://github.com/TUM-Dev/Campus-Flutter/blob/development/.github/workflows/deploy_beta.yml
name: Deploy Beta to TestFlight and Play Store

on:
  push:
    branches:
      - 'master'
    paths:
      - 'lib/**'
      - 'ios/**'
      - 'android/**'
      - 'pubspec.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest #macos-latest

    strategy:
      matrix:
        platform:
          #- ios
          - android
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true

      - name: Install Bundle
        run: cd ./${{ matrix.platform }} && bundle install

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - if: matrix.platform == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Install Flutter Packages
        run: flutter pub get

      - name: Build Runner
        run: dart run build_runner build --delete-conflicting-outputs

      - if: matrix.platform == 'ios'
        name: Install CocoaPods
        run: cd ./ios && pod install

      - if: matrix.platform == 'ios'
        name: Add SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.MATCH_DEPLOY_KEY }}

      - if: matrix.platform == 'ios'
        name: Build and Deploy to TestFlight
        run: |
          cd ./ios
          bundle exec fastlane ios_beta
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.ASC_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEYCHAIN_NAME: ${{ secrets.KEYCHAIN_NAME }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - if: matrix.platform == 'android'
        name: Deserialize Keystore File
        run: cd ./android/app && echo "$ANDROID_KEYSTORE_FILE" | base64 --decode > ./upload-keystore
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.SIGNING_STORE_BASE64 }}

      - if: matrix.platform == 'android'
        name: Build and Deploy to Google Play Store
        run: |
          cd ./android
          bundle exec fastlane android_beta
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          ANDROID_KEYSTORE_FILE: ./upload-keystore
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
